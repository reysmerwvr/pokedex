{"version":3,"sources":["hoc/Main.js","actions/types.js","containers/Login.js","actions/auth_actions.js","helpers/history.js","containers/Register.js","components/Pokemon.js","containers/Pokemons.js","actions/pokemons_actions.js","containers/Dashboard.js","components/MenuItems.js","reducers/auth_reducer.js","reducers/pokemons_reducer.js","reducers/index.js","endpoints/auth_endpoints.js","endpoints/pokemons_endpoints.js","helpers/general.js","sagas/auth_saga.js","sagas/pokemons_saga.js","sagas/index.js","App.js","serviceWorker.js","index.js"],"names":["main","props","react_default","a","createElement","children","AUTH_USER","AUTH_USER_SUCCESS","AUTH_USER_ERROR","UNAUTH_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","GET_POKEMONS_SUCCESS","SET_LOADING","SET_ERROR","fields","email","message","required","password","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","handleSubmit","preventDefault","_this$state","state","errorMessages","validateFields","length","signIn","toast","warn","join","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","bind","assertThisInitialized","prevProps","error","errorMessage","key","validator","isEmpty","push","concat","isEmail","_this$props","classes","loading","Main","className","react_toastify","newestOnTop","rtl","pauseOnVisibilityChange","CssBaseline","Paper","paper","Avatar","avatar","alt","src","Typography","component","variant","form","FormControl","margin","fullWidth","InputLabel","htmlFor","Input","id","autoComplete","autoFocus","onChange","disabled","type","FormControlLabel","control","Checkbox","color","label","wrapper","Button","submit","onClick","CircularProgress","size","buttonProgress","react_router_dom","to","nextProps","prevState","Component","mapDispatchToProps","payload","connect","_ref","auth","withStyles","theme","width","display","marginLeft","spacing","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","root","buttonSuccess","backgroundColor","green","&:hover","fabProgress","top","left","zIndex","createBrowserHistory","confirmPassword","Register","signUp","handleCancel","history","_this$state2","matches","Pokemon","renderPokemonDetail","selectedPokemon","_","Card","card","CardMedia","media","image","sprites","front_default","title","style","backgroundSize","CardContent","TextField","placeholder","readOnly","inputProps","formControl","Select","types","map","index","MenuItem","height","weight","moves","move","Grid","container","item","xs","md","lg","pokemons","flexWrap","maxWidth","paddingTop","Pokemons","handleSearch","self","pokemonsList","search","wait","clearTimeout","setTimeout","searchWordsArray","trim","split","filter","word","toLowerCase","filteredPokemons","pokemon","indexOf","setFilteredPokemons","renderPokemons","selectPokemon","getPokemons","_this2","CardHeader","subheader","CardActions","_this$props2","pokemonsFilteredList","textField","onBlur","InputProps","endAdornment","InputAdornment","Search_default","searchButton","paginator","flexGrow","absolute","bottom","right","icon","justifyContent","cursor","textAlign","palette","text","secondary","Dashboard","open","ContentComponent","handleDrawerOpen","handleDrawerClose","token","localStorage","getItem","user","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","toolbar","IconButton","aria-label","menuButton","menuButtonHidden","Menu_default","noWrap","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","List","activeClassName","ListItem","button","ListItemIcon","Dashboard_default","ListItemText","primary","Face_default","signOut","ExitToApp_default","content","match","path","paddingRight","objectSpread","mixins","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","overflowX","appBarSpacer","overflow","chartContainer","tableContainer","h5","marginBottom","INITIAL_STATE","authReducer","arguments","undefined","action","pokemonsReducer","_action$payload","count","next","previous","results","toConsumableArray","rootReducer","combineReducers","users","find","data","status","code","envVars","process","limit","offset","axios","get","params","getPokemon","handleError","response","console","retrieveActionCreator","object","fetchSignIn","fetchSignUp","fetchSignOut","signInSaga","signUpSaga","signOutSaga","regenerator_default","wrap","_context","prev","sent","put","setItem","moment","now","toString","t0","stop","_marked","_ref2","_data","_status","_error","_context2","_marked2","_context3","removeItem","_marked3","_context4","takeLatest","_marked4","_context5","_marked5","_context6","_marked6","fetchPokemons","getPokemonsSaga","getPokemonResponse","keys","t1","done","t2","pokemons_saga_marked","pokemons_saga_marked2","rootSaga","all","sagas_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","PrivateRoute","isAuthenticated","rest","objectWithoutProperties","react_router","assign","render","pathname","from","location","run","sagas","App","es","exact","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28fafda6.chunk.js","sourcesContent":["import React from 'react';\n\nconst main = (props) => <div> {props.children} </div>;\n\nexport default main;\n","export const AUTH_USER = 'auth_user';\nexport const AUTH_USER_SUCCESS = 'auth_user_success';\nexport const AUTH_USER_ERROR = 'auth_user_error';\nexport const UNAUTH_USER = 'unauth_user';\nexport const REGISTER_USER = 'register_user';\nexport const REGISTER_USER_SUCCESS = 'register_user_success';\nexport const REGISTER_USER_ERROR = 'register_user_error';\nexport const GET_POKEMONS_SUCCESS = 'get_pokemons_success';\nexport const SET_FILTERED_POKEMONS = 'set_filetered_pokemons';\nexport const SET_LOADING = 'set_loading';\nexport const SET_ERROR = 'set_error';\nexport const SET_POKEMON = 'set_pokemon';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport green from '@material-ui/core/colors/green';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ToastContainer, toast } from 'react-toastify';\nimport validator from 'validator';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport Main from '../hoc/Main';\nimport { signIn } from '../actions';\n\nconst styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n    },\n    avatar: {\n      margin: theme.spacing()\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(),\n    },\n    submit: {\n      marginTop: theme.spacing(3),\n    },\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      wrapper: {\n        margin: theme.spacing(),\n        position: 'relative',\n      },\n      buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n          backgroundColor: green[700],\n        },\n      },\n      fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n      },\n      buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n      },\n});\n\nconst fields = {\n    email: { message: 'email', required: true, email: true, password: false },\n    password: { message: 'password', required: true, email: false, password: true }\n}\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { error } = nextProps;\n        if (error !== prevState.error) {\n            return { error };\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = prevProps;\n        const errorMessage = this.props.error;\n        if(error !== errorMessage) {\n          toast.error(errorMessage, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        const errorMessages = this.validateFields();\n        if(errorMessages.length <= 0) {\n            this.props.signIn({ email, password });\n        } else {\n            toast.warn(errorMessages.join('\\n'), {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    validateFields() {\n        const errorMessages = [];\n        for (let key in fields) {\n            if(fields[key].required && validator.isEmpty(this.state[key])) {\n                errorMessages.push(`The ${fields[key].message} is required`);\n            }\n            if(fields[key].email && !validator.isEmail(this.state[key])) {\n                errorMessages.push(`The ${fields[key].message} is not an email`);\n            }\n        }\n        return errorMessages;\n    }\n\n    render() {\n        const { classes, loading } = this.props;\n        return (\n            <Main>\n                <main className={classes.main}>\n                    <ToastContainer\n                        position=\"top-right\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={false}\n                        closeOnClick\n                        rtl={false}\n                        pauseOnVisibilityChange\n                        draggable\n                        pauseOnHover\n                    />\n                    <CssBaseline />\n                    <Paper className={classes.paper}>\n                        <Avatar \n                            className={classes.avatar}\n                            alt={'Pokemon Image'}\n                            src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png\"\n                        />\n                        <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                        </Typography>\n                        <form className={classes.form}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                                <Input\n                                    required\n                                    id=\"email\" \n                                    name=\"email\" \n                                    autoComplete=\"email\" \n                                    autoFocus\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input\n                                    required \n                                    name=\"password\" \n                                    type=\"password\" \n                                    id=\"password\" \n                                    autoComplete=\"current-password\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <div className={classes.wrapper}>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={this.handleSubmit}\n                                    disabled={loading}\n                                >\n                                    Sign in\n                                </Button>\n                                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            </div>\n                            <div className={classes.wrapper}>\n                                Don't you have account?  <Link to=\"/register/\">Sign Up</Link>\n                            </div>\n                        </form>\n                    </Paper>\n                </main>\n            </Main>\n        );\n    }\n}\n\nconst mapStateToProps = ({ auth }) => {\n    const { error, loading } = auth;\n\n    return { error, loading };\n};\n\nconst mapDispatchToProps = { signIn };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Login));","import {\n    AUTH_USER,\n    REGISTER_USER,\n    UNAUTH_USER\n} from './types';\n\nexport const signIn = (payload) => ({\n    type: AUTH_USER,\n    payload\n});\n\nexport const signUp = (payload) => ({\n    type: REGISTER_USER,\n    payload\n});\n\nexport const signOut = () => ({\n    type: UNAUTH_USER\n});\n\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport green from '@material-ui/core/colors/green';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ToastContainer, toast } from 'react-toastify';\nimport validator from 'validator';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport Main from '../hoc/Main';\nimport { signUp } from '../actions';\nimport history from '../helpers/history';\n\nconst styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n    },\n    avatar: {\n      margin: theme.spacing()\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(),\n    },\n    submit: {\n      marginTop: theme.spacing(3),\n    },\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      wrapper: {\n        margin: theme.spacing(),\n        position: 'relative',\n      },\n      buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n          backgroundColor: green[700],\n        },\n      },\n      fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n      },\n      buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n      },\n});\n\nconst fields = {\n    name: { message: 'name', required: true, email: false, password: false },\n    email: { message: 'email', required: true, email: true, password: false },\n    password: { message: 'password', required: true, email: false, password: true },\n    confirmPassword: { message: 'confirm password', required: true, email: false, password: false }\n}\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateFields = this.validateFields.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { error } = nextProps;\n        if (error !== prevState.error) {\n            return { error };\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = prevProps;\n        const errorMessage = this.props.error;\n        if(error !== errorMessage) {\n          toast.error(errorMessage, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { name, email, password, confirmPassword } = this.state;\n        const errorMessages = this.validateFields();\n        if(errorMessages.length <= 0) {\n            this.props.signUp({ name, email, password, confirmPassword });\n        } else {\n            toast.warn(errorMessages.join('\\n'), {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    handleCancel = () => {\n        history.push('/login');\n    }\n\n    validateFields() {\n        const { password, confirmPassword } = this.state;\n        const errorMessages = [];\n        for (let key in fields) {\n            if(fields[key].required && validator.isEmpty(this.state[key])) {\n                errorMessages.push(`The ${fields[key].message} is required`);\n            }\n            if(fields[key].email && !validator.isEmail(this.state[key])) {\n                errorMessages.push(`The ${fields[key].message} is not an email`);\n            }\n            if(fields[key].password && !validator.matches(this.state[key], \n                \"^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")) {\n                errorMessages.push(`The ${fields[key].message} is very weak`);\n            }\n        }\n        if(password !== confirmPassword) {\n            errorMessages.push(`The passwords fields are different`);\n        }\n        return errorMessages;\n    }\n\n    render() {\n        const { classes, loading } = this.props;\n        return (\n            <Main>\n                <main className={classes.main}>\n                    <ToastContainer\n                        position=\"top-right\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={false}\n                        closeOnClick\n                        rtl={false}\n                        pauseOnVisibilityChange\n                        draggable\n                        pauseOnHover\n                    />\n                    <CssBaseline />\n                    <Paper className={classes.paper}>\n                        <Avatar \n                            className={classes.avatar}\n                            alt={'Pokemon Image'}\n                            src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/25.png\"\n                        />\n                        <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                        </Typography>\n                        <form className={classes.form}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">Name</InputLabel>\n                                <Input\n                                    required\n                                    id=\"name\" \n                                    name=\"name\" \n                                    autoComplete=\"name\" \n                                    autoFocus\n                                    value={this.state.name}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                                <Input\n                                    required\n                                    id=\"email\" \n                                    name=\"email\" \n                                    autoComplete=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input\n                                    required \n                                    name=\"password\" \n                                    type=\"password\" \n                                    id=\"password\" \n                                    autoComplete=\"current-password\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">Confirm Password</InputLabel>\n                                <Input\n                                    required \n                                    name=\"confirmPassword\" \n                                    type=\"password\" \n                                    id=\"confirmPassword\" \n                                    autoComplete=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.handleChange}\n                                    disabled={loading}\n                                />\n                            </FormControl>\n                            <div className={classes.wrapper}>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={this.handleSubmit}\n                                    disabled={loading}\n                                >\n                                    Sign up\n                                </Button>\n                                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            </div>\n                            <div className={classes.wrapper}>\n                                <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.submit}\n                                    onClick={this.handleCancel}\n                                    disabled={loading}\n                                >\n                                    Cancel\n                                </Button>\n                            </div>\n                        </form>\n                    </Paper>\n                </main>\n            </Main>\n        );\n    }\n}\n\nconst mapStateToProps = ({ auth }) => {\n    const { error, loading } = auth;\n\n    return { error, loading };\n};\n\nconst mapDispatchToProps = { signUp };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Register));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport Main from '../hoc/Main';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(),\n        width: '100%'\n    },\n    card: {\n        maxWidth: '100%',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n});\n\nclass Pokemon extends Component {\n\n    constructor(props) {\n        super(props);\n        this.renderPokemonDetail = this.renderPokemonDetail.bind(this);\n    }\n\n    renderPokemonDetail() {\n        const { classes, selectedPokemon } = this.props;\n        return (_.size(selectedPokemon) > 0) ? (\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.media}\n                    image={selectedPokemon.sprites.front_default}\n                    title={'Pokemon Image'}\n                    style={{ backgroundSize: 'contain' }}\n                />\n                <CardContent>\n                    <TextField\n                        id=\"id\"\n                        name=\"id\"\n                        label=\"Id\"\n                        value={selectedPokemon.id}\n                        placeholder=\"Id\"\n                        margin=\"normal\"\n                        readOnly\n                        inputProps={{ readOnly: true }}\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"name\"\n                        name=\"name\"\n                        label=\"Name\"\n                        value={selectedPokemon.name}\n                        placeholder=\"Name\"\n                        margin=\"normal\"\n                        readOnly\n                        inputProps={{ readOnly: true }}\n                        fullWidth\n                    /> \n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"types-simple\">Type(s)</InputLabel>\n                        <Select\n                            value={0}\n                            inputProps={{\n                                name: 'types',\n                                id: 'types-simple',\n                            }}\n                        >\n                            {\n                                selectedPokemon.types.map((value, index) => {\n                                    return (\n                                        <MenuItem \n                                            key={index}\n                                            value={index}\n                                        > \n                                            {value.type.name}\n                                        </MenuItem>\n                                    );\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"height\"\n                        name=\"height\"\n                        label=\"Height\"\n                        value={selectedPokemon.height}\n                        placeholder=\"Height\"\n                        margin=\"normal\"\n                        readOnly\n                        inputProps={{ readOnly: true }}\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"weight\"\n                        name=\"weight\"\n                        label=\"Weight\"\n                        value={selectedPokemon.weight}\n                        placeholder=\"Weight\"\n                        margin=\"normal\"\n                        readOnly\n                        inputProps={{ readOnly: true }}\n                        fullWidth\n                    />\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"moves-simple\">Move(s)</InputLabel>\n                        <Select\n                            value={0}\n                            inputProps={{\n                                name: 'moves',\n                                id: 'moves-simple',\n                            }}\n                        >\n                            {\n                                selectedPokemon.moves.map((value, index) => {\n                                    return (\n                                        <MenuItem \n                                            key={index}\n                                            value={index}\n                                        > \n                                            {value.move.name}\n                                        </MenuItem>\n                                    );\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                </CardContent>\n            </Card>\n        ) : null;\n    }\n\n    render() {\n        const { selectedPokemon } = this.props;\n        return (\n            <Main>\n                <div className=\"row around-xs\">\n                    <Grid container spacing={3}>\n                        <Grid \n                            item \n                            xs={12} \n                            md={6} \n                            lg={6}\n                        >\n                            {\n                                selectedPokemon && \n                                this.renderPokemonDetail()\n                            }\n                        </Grid>\n                    </Grid>\n                </div>\n            </Main>\n        );\n    }\n}\n\nconst mapStateToProps = ({ pokemons }) => {\n    const { selectedPokemon } = pokemons;\n\n    return { selectedPokemon };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(Pokemon));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Search from '@material-ui/icons/Search';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Main from '../hoc/Main';\nimport history from '../helpers/history';\nimport { getPokemons, setFilteredPokemons, selectPokemon } from '../actions';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    absolute: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n    icon: {\n        margin: theme.spacing(),\n    },\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        width: 200,\n    },\n    formControl: {\n       display: 'flex',\n       alignItems: 'flex-end',\n       justifyContent: 'flex-end'\n    },\n    searchButton: {\n        cursor: 'pointer',\n    },\n    card: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    }\n});\n\nclass Pokemons extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.renderPokemons = this.renderPokemons.bind(this);\n        this.selectPokemon = this.selectPokemon.bind(this);\n    \n        this.state = {\n            search: '',\n            wait: null\n        };\n    }\n\n    componentDidMount() {\n        const { pokemonsList, getPokemons } = this.props;\n        if(_.size(pokemonsList) <= 0) {\n            getPokemons();\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSearch = event => {\n        const self = this;\n        const { pokemonsList } = this.props;\n        const { search } = this.state;\n        let { wait } = this.state;\n        if (wait !== null) {\n            clearTimeout(wait);\n        }\n        wait = setTimeout(() => {\n            const searchWordsArray = search.trim()\n                                            .split(' ')\n                                            .filter(word => word.length > 0)\n                                            .map(word => word.toLowerCase());\n            const filteredPokemons = pokemonsList.filter(\n                pokemon => {\n                    const { name, types } = pokemon;\n                    const type = types.map(value => {\n                        return value.type.name;\n                    }).join(' ');\n                    const matchesArray = searchWordsArray.filter(\n                        word => (name.toLowerCase().indexOf(word) >= 0 || type.toLowerCase().indexOf(word) >= 0)\n                    );\n                    return matchesArray.length > 0;\n                }\n            );\n            self.props.setFilteredPokemons(filteredPokemons);\n        }, 300);\n        this.setState({ search, wait });\n    }\n\n    selectPokemon(pokemon) {\n        this.props.selectPokemon(pokemon);\n        history.push(`/pokemons/${pokemon.id}`);\n    }\n\n    renderPokemons(pokemonsList) {\n        const { classes } = this.props;\n        return (\n            pokemonsList.length > 0 &&\n            pokemonsList.map((pokemon, index) => {\n                const { name, sprites, types } = pokemon;\n                const type = types.map(value => {\n                    return value.type.name;\n                }).join(' - ');\n                return (\n                    <Grid \n                        item \n                        xs={12} \n                        md={6} \n                        lg={4}\n                        key={index}\n                    >\n                        <Card\n                            className={classes.card} \n                            onClick={() => this.selectPokemon(pokemon)}\n                        >\n                            <CardHeader\n                                avatar= {\n                                    <Avatar \n                                        className={classes.avatar}\n                                        alt={'Pokemon Image'}\n                                        src={sprites.front_default}\n                                    >\n                                    </Avatar>\n                                }\n                                title={`Name: ${name}`}\n                                subheader={`Type(s): ${type}`}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image={sprites.front_default}\n                                title={'Pokemon Image'}\n                                style={{ backgroundSize: 'contain' }}\n                            />\n                            <CardActions>\n                                <Button \n                                    size=\"small\" \n                                    color=\"primary\"\n                                    onClick={() => this.selectPokemon(pokemon)}\n                                >\n                                    Learn More\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                );\n            })\n        );\n    }\n\n    render() {\n        const { classes, pokemonsList, pokemonsFilteredList } = this.props;\n        return (\n            <Main>\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        id=\"search\"\n                        name=\"search\"\n                        label=\"Search\"\n                        type=\"search\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={this.handleChange}\n                        onBlur={this.handleSearch}\n                        value={this.state.search}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                <Search\n                                    className={classes.searchButton} \n                                    onClick={this.handleSearch} \n                                />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </FormControl>\n                <div \n                    className={classes.root}\n                >\n                    <Grid container spacing={3}>\n                        {\n                            pokemonsFilteredList.length > 0 ?\n                                this.renderPokemons(pokemonsFilteredList)\n                            :\n                                this.renderPokemons(pokemonsList)\n                        }\n                    </Grid>\n                </div>\n            </Main>\n        );\n    }\n}\n\nconst mapStateToProps = ({ pokemons }) => {\n    const { error, loading, paginator, pokemonsList, pokemonsFilteredList } = pokemons;\n\n    return { error, loading, paginator, pokemonsList, pokemonsFilteredList };\n};\n\nexport default connect(mapStateToProps, \n    { \n        getPokemons,\n        setFilteredPokemons,\n        selectPokemon\n    }\n)(withStyles(styles)(Pokemons));","import {\n    SET_LOADING,\n    SET_FILTERED_POKEMONS,\n    SET_POKEMON\n} from './types';\n\nexport const getPokemons = (payload) => ({\n    type: SET_LOADING,\n    payload\n});\n\nexport const setFilteredPokemons = (payload) => ({\n    type: SET_FILTERED_POKEMONS,\n    payload\n});\n\nexport const selectPokemon = (payload) => ({\n    type: SET_POKEMON,\n    payload\n});\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport history from '../helpers/history';\nimport { menuItems } from '../components/MenuItems';\nimport Pokemon from '../components/Pokemon';\nimport Main from '../hoc/Main';\nimport { signOut } from '../actions';\nimport Pokemons from './Pokemons';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      height: '100vh',\n      overflow: 'auto',\n      marginTop: 50\n    },\n    chartContainer: {\n      marginLeft: -22,\n    },\n    tableContainer: {\n      height: 320,\n    },\n    h5: {\n      marginBottom: theme.spacing(2),\n    },\n});\n\nclass Dashboard extends Component {\n  state = {\n    open: true,\n    ContentComponent: Pokemons\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if(!this.props.user && !token) {\n      history.push('/login');\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { match } = nextProps;\n    if(match !== prevState.match) {\n      let ContentComponent = prevState.component;\n      const path = match.path;\n      if(path) {\n        switch(path) {\n          case '/dashboard':\n            ContentComponent = Pokemons;\n            break;\n          case '/pokemons':\n            ContentComponent = Pokemons;\n            break;\n          case '/pokemons/:id':\n              ContentComponent = Pokemon;\n              break;\n          default:\n            break;\n        }\n      }\n      return { ContentComponent, match }\n    }\n    return null;\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { ContentComponent } = this.state;\n    return (\n      <Main>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n          >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n              <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Pokedex App\n              </Typography>\n          </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <List>{menuItems(this.props)}</List>\n          </Drawer>\n          <main className={classes.content}>\n            <ContentComponent />\n          </main>\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  const { user } = auth;\n\n  return { user };\n};\n\nconst mapDispatchToProps = { signOut };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard));","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Face from '@material-ui/icons/Face';\n\nexport const menuItems = (props) => (\n  <div>\n    <NavLink to={'/dashboard'} activeClassName='selected'>\n        <ListItem button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary='Dashboard' />\n        </ListItem>\n    </NavLink>  \n    <NavLink to={'/pokemons'} activeClassName='selected'>\n        <ListItem button>\n            <ListItemIcon>\n                <Face />\n            </ListItemIcon>\n            <ListItemText primary='Pokemons' />\n        </ListItem>\n    </NavLink>\n    <NavLink \n      to={'/login'} \n      activeClassName={'menuListItem'} \n      onClick={props.signOut}\n    >    \n        <ListItem button>\n        <ListItemIcon>\n            <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary='Exit' />\n        </ListItem>\n    </NavLink>\n  </div>\n);","import {\n    AUTH_USER,\n    UNAUTH_USER,\n    AUTH_USER_ERROR,\n    AUTH_USER_SUCCESS,\n    REGISTER_USER,\n    REGISTER_USER_ERROR,\n    REGISTER_USER_SUCCESS,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    user: null,\n    error: null,\n    loading: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case AUTH_USER:\n            return { ...state, loading: true, error: null };\n        case UNAUTH_USER:\n            return { ...state, user: null };\n        case AUTH_USER_ERROR:\n            return { ...state, loading: false, error: action.payload };\n        case AUTH_USER_SUCCESS:\n            return { ...state, ...INITIAL_STATE, user: action.payload };\n        case REGISTER_USER:\n            return { ...state, loading: true, error: null };\n        case REGISTER_USER_ERROR:\n            return { ...state, loading: false, error: action.payload };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, ...INITIAL_STATE, user: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import {\n    SET_LOADING,\n    SET_ERROR,\n    GET_POKEMONS_SUCCESS,\n    SET_FILTERED_POKEMONS,\n    SET_POKEMON\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n    paginator: {},\n    pokemonsList: [],\n    pokemonsFilteredList: [],\n    selectedPokemon: {},\n    error: null,\n    loading: false,\n};\n\nconst pokemonsReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_LOADING:\n            return { ...state, loading: true, error: null };\n        case SET_ERROR:\n            return { ...state, loading: false, error: action.payload };\n        case GET_POKEMONS_SUCCESS:\n            const { count, next, previous, results } =  action.payload;\n            return { \n                ...state,\n                pokemonsList: [...state.pokemonsList, ...results],\n                paginator: { count, next, previous }\n            };\n        case SET_FILTERED_POKEMONS:\n            return { \n                ...state,\n                pokemonsFilteredList: action.payload\n            };\n        case SET_POKEMON:\n            return { \n                ...state,\n                selectedPokemon: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default pokemonsReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth_reducer';\nimport pokemonsReducer from './pokemons_reducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    pokemons: pokemonsReducer\n});\n\nexport default rootReducer;","import validator from 'validator';\nimport users from '../data/users.json';\n\nexport const signIn = (payload) => {\n    const { email, password } = payload;\n    const user = users.find((user) => {\n        return (user.email === email && user.password === password);\n    });\n    if(user) {\n        delete user.password;\n        return {\n            data: user,\n            status: \"success\",\n            message: \"OK\",\n            code: 200,\n            error: {}\n        };\n    } else {\n        return {\n            data: {},\n            status: \"error\",\n            message: \"Invalid credentials.\",\n            code: 401,\n            error: {\n                message: \"Invalid credentials.\"\n            }\n        }\n    }\n}\n\nexport const signUp = (payload) => {\n    const { name, email, password, confirmPassword } = payload;\n    if(!validator.isEmpty(name) && !validator.isEmpty(email) && password === confirmPassword) {\n        const user = { name, email }; \n        return {\n            data: user,\n            status: \"success\",\n            message: \"OK\",\n            code: 200,\n            error: {}\n        };\n    } else {\n        return {\n            data: {},\n            status: \"error\",\n            message: \"Error creating poke master.\",\n            code: 400,\n            error: {\n                message: \"Error creating poke master.\"\n            }\n        }\n    }\n}","import axios from 'axios';\n\nconst envVars = {\n    REACT_APP_API_URL: process.env.REACT_APP_API_URL || 'https://pokeapi.co/api/v2'\n};\n\nexport const getPokemons = (payload) => {\n    let limit = 50;\n    let offset = 0;\n    if(payload) {\n        limit = payload.limit;\n        offset = payload.offset;\n    }\n    return axios.get(`${envVars.REACT_APP_API_URL}/pokemon/`, {\n        params: {\n            limit,\n            offset\n        }\n    });\n}\n\nexport const getPokemon = (payload) => {\n    return axios.get(`${envVars.REACT_APP_API_URL}/pokemon/${payload.name}`);\n}","export function handleError(error) {\n    if (error !== undefined) {\n        if (error.response) {\n            if (error.response.status < 500) {\n                const errorMessage = error.response.data.message;\n                console.error(errorMessage);\n            }\n        } else {\n            console.error(error);\n        }\n    }\n}\n\nexport function retrieveActionCreator(action, object) {\n    return {\n        type: action,\n        payload: object\n    };\n}\n\nexport const defaultErrorMessage = 'Oops! Something went wrong';","import { put, call, takeLatest } from 'redux-saga/effects';\nimport moment from 'moment';\nimport { signIn, signUp } from '../endpoints';\nimport {\n    AUTH_USER,\n    AUTH_USER_SUCCESS,\n    AUTH_USER_ERROR,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_ERROR,\n    UNAUTH_USER\n} from '../actions/types';\nimport { \n    handleError, \n    retrieveActionCreator\n} from '../helpers/general';\nimport history from '../helpers/history';\n\nfunction* fetchSignIn(action) {\n    try {\n        const { data, status, error } = yield call(signIn, action.payload);\n        if (status === \"success\") {\n            yield put(retrieveActionCreator(AUTH_USER_SUCCESS, data));\n            localStorage.setItem('token', moment.now().toString());\n            history.push('/dashboard');\n        } else if (error) {\n            handleError(error);\n            yield put(retrieveActionCreator(AUTH_USER_ERROR, error.message));\n        }\n    } catch (error) {\n        handleError(error);\n        yield put(retrieveActionCreator(AUTH_USER_ERROR, error));\n    }\n}\n\nfunction* fetchSignUp(action) {\n    try {\n        const { data, status, error } = yield call(signUp, action.payload);\n        if (status === \"success\") {\n            yield put(retrieveActionCreator(REGISTER_USER_SUCCESS, data));\n            localStorage.setItem('token', moment.now().toString());\n            history.push('/dashboard');\n        } else if (error) {\n            handleError(error);\n            yield put(retrieveActionCreator(REGISTER_USER_ERROR, error.message));\n        }\n    } catch (error) {\n        handleError(error);\n        yield put(retrieveActionCreator(REGISTER_USER_ERROR, error));\n    }\n}\n\nfunction* fetchSignOut() {\n    localStorage.removeItem('token');\n    history.push('/login');\n}\n\nexport function* signInSaga() {\n    yield takeLatest(AUTH_USER, fetchSignIn);\n}\n\nexport function* signUpSaga() {\n    yield takeLatest(REGISTER_USER, fetchSignUp);\n}\n\nexport function* signOutSaga() {\n    yield takeLatest(UNAUTH_USER, fetchSignOut);\n}\n\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport { getPokemons, getPokemon } from '../endpoints';\nimport {\n    SET_LOADING,\n    SET_ERROR,\n    GET_POKEMONS_SUCCESS\n} from '../actions/types';\nimport { \n    handleError, \n    retrieveActionCreator\n} from '../helpers/general';\n\nfunction* fetchPokemons(action) {\n    try {\n       const { data } = yield call(getPokemons, action.payload);\n       let { results } =  data;\n       if (results.length > 0) {\n            for(let index in results) {\n                const { name } = results[index];\n                    if(name) {\n                        const getPokemonResponse = yield call(getPokemon, { name });\n                        results[index] = { ...results[index], ...getPokemonResponse.data };\n                    }\n            }\n            data.results = results;\n            yield put(retrieveActionCreator(GET_POKEMONS_SUCCESS, data));\n       } else {\n            const error = { message: 'Data not found' }; \n            handleError(error);\n            yield put(retrieveActionCreator(SET_ERROR, error));\n       }\n    } catch (error) {\n       handleError(error);\n       yield put(retrieveActionCreator(SET_ERROR, error));\n    }\n}\n\nexport function* getPokemonsSaga() {\n    yield takeLatest(SET_LOADING, fetchPokemons);\n}\n\n\n","import { all } from 'redux-saga/effects';\nimport { signInSaga, signUpSaga, signOutSaga } from './auth_saga';\nimport { getPokemonsSaga } from './pokemons_saga';\n\nexport default function* rootSaga() {\n  yield all([\n    signInSaga(),\n    signUpSaga(),\n    signOutSaga(),\n    getPokemonsSaga()\n  ]);\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { Route, Switch, Router, Redirect } from 'react-router-dom';\nimport Login from './containers/Login';\nimport Register from './containers/Register';\nimport Dashboard from './containers/Dashboard';\n\nimport reducers from './reducers';\nimport sagas from './sagas';\nimport history from './helpers/history';\n\nimport './App.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, {}, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(sagas)\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isAuthenticated: false };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if(token) {\n      this.setState({ isAuthenticated: true });\n      history.push('/dashboard');\n    } else {\n      this.setState({ isAuthenticated: false });\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.state;\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <PrivateRoute\n              exact \n              path=\"/dashboard\" \n              component={Dashboard}\n              isAuthenticated={isAuthenticated} \n            />\n            <PrivateRoute\n              exact \n              path=\"/pokemons\" \n              component={Dashboard}\n              isAuthenticated={isAuthenticated} \n            />\n            <PrivateRoute\n              exact \n              path=\"/pokemons/:id\" \n              component={Dashboard}\n              isAuthenticated={isAuthenticated} \n            />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nfunction PrivateRoute({ component: Component, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        (isAuthenticated || localStorage.getItem('token')) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}